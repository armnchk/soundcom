import { importFromYandexPlaylist, updateAllArtists } from './music-importer';

// –°–ø–∏—Å–æ–∫ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ –Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞
const YANDEX_PLAYLISTS = [
  'https://music.yandex.ru/chart', // –ß–∞—Ä—Ç
  'https://music.yandex.ru/playlists/2111e2b6-587d-a600-2fea-54df7c314477', // –ù–æ–≤—ã–µ —Ä–µ–ª–∏–∑—ã
  'https://music.yandex.ru/playlists/3c5d7e75-c8ea-55af-9689-2263608117ba', // Indie Rock
  'https://music.yandex.ru/playlists/83d59684-4c03-783a-8a27-8a04d52edb95', // Russian Hip-Hop
  'https://music.yandex.ru/playlists/be0f3522-0e50-fe5d-8a01-8a0146041ccd', // –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞
];

export async function runDailyMusicImport() {
  console.log('üéµ –ó–∞–ø—É—Å–∫ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞ –º—É–∑—ã–∫–∏...');
  
  const startTime = new Date();
  let totalStats = {
    newArtists: 0,
    updatedArtists: 0,
    newReleases: 0,
    skippedReleases: 0,
    errors: [] as string[]
  };

  // 1. –ò–º–ø–æ—Ä—Ç –Ω–æ–≤—ã—Ö –∞—Ä—Ç–∏—Å—Ç–æ–≤ –∏–∑ –Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫–∏ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤
  console.log('üìã –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–ª–µ–π–ª–∏—Å—Ç—ã –Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫–∏...');
  
  for (const playlistUrl of YANDEX_PLAYLISTS) {
    try {
      console.log(`üîÑ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–ª–µ–π–ª–∏—Å—Ç: ${playlistUrl}`);
      
      const result = await importFromYandexPlaylist(playlistUrl);
      
      totalStats.newArtists += result.newArtists;
      totalStats.newReleases += result.newReleases;
      totalStats.skippedReleases += result.skippedReleases;
      totalStats.errors.push(...result.errors);
      
      console.log(`‚úÖ –ü–ª–µ–π–ª–∏—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω: +${result.newReleases} —Ä–µ–ª–∏–∑–æ–≤, +${result.newArtists} –∞—Ä—Ç–∏—Å—Ç–æ–≤`);
      
      // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –ø–ª–µ–π–ª–∏—Å—Ç–∞–º–∏
      await new Promise(resolve => setTimeout(resolve, 5000));
      
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–ª–µ–π–ª–∏—Å—Ç–∞ ${playlistUrl}:`, error);
      totalStats.errors.push(`Playlist ${playlistUrl}: ${error instanceof Error ? error.message : 'Unknown error'}`);
    }
  }

  // 2. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∞—Ä—Ç–∏—Å—Ç–æ–≤
  console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∞—Ä—Ç–∏—Å—Ç–æ–≤...');
  
  try {
    const updateResult = await updateAllArtists();
    
    totalStats.updatedArtists += updateResult.updatedArtists;
    totalStats.newReleases += updateResult.newReleases;
    totalStats.skippedReleases += updateResult.skippedReleases;
    totalStats.errors.push(...updateResult.errors);
    
    console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: +${updateResult.newReleases} —Ä–µ–ª–∏–∑–æ–≤ –¥–ª—è ${updateResult.updatedArtists} –∞—Ä—Ç–∏—Å—Ç–æ–≤`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∞—Ä—Ç–∏—Å—Ç–æ–≤:', error);
    totalStats.errors.push(`Artist update: ${error instanceof Error ? error.message : 'Unknown error'}`);
  }

  const endTime = new Date();
  const duration = Math.round((endTime.getTime() - startTime.getTime()) / 1000);

  // –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
  console.log('\nüìä –ò–¢–û–ì–ò –ï–ñ–ï–î–ù–ï–í–ù–û–ì–û –ò–ú–ü–û–†–¢–ê:');
  console.log(`‚è±Ô∏è  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${duration} —Å–µ–∫—É–Ω–¥`);
  console.log(`üé§ –ù–æ–≤—ã—Ö –∞—Ä—Ç–∏—Å—Ç–æ–≤: ${totalStats.newArtists}`);
  console.log(`üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∞—Ä—Ç–∏—Å—Ç–æ–≤: ${totalStats.updatedArtists}`);
  console.log(`üíø –ù–æ–≤—ã—Ö —Ä–µ–ª–∏–∑–æ–≤: ${totalStats.newReleases}`);
  console.log(`‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ —Ä–µ–ª–∏–∑–æ–≤: ${totalStats.skippedReleases}`);
  console.log(`‚ùå –û—à–∏–±–æ–∫: ${totalStats.errors.length}`);
  
  if (totalStats.errors.length > 0) {
    console.log('\nüîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–æ–∫:');
    totalStats.errors.forEach(error => console.log(`  - ${error}`));
  }

  return totalStats;
}

// –ó–∞–ø—É—Å–∫ –≤ 03:00 –∫–∞–∂–¥—ã–π –¥–µ–Ω—å (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å cron)
export function scheduleDaily() {
  console.log('‚è∞ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞ –≤ 03:00');
  
  // –í –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π —Å—Ä–µ–¥–µ –∑–¥–µ—Å—å –±—ã–ª –±—ã —Ä–µ–∞–ª—å–Ω—ã–π cron –∏–ª–∏ setTimeout
  // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–∫–∞–∂–µ–º –∫–∞–∫ —ç—Ç–æ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å
  
  const now = new Date();
  const tomorrow = new Date(now);
  tomorrow.setDate(tomorrow.getDate() + 1);
  tomorrow.setHours(3, 0, 0, 0); // 03:00
  
  const msUntilNextRun = tomorrow.getTime() - now.getTime();
  const hoursUntilNextRun = Math.round(msUntilNextRun / (1000 * 60 * 60));
  
  console.log(`‚è≥ –°–ª–µ–¥—É—é—â–∏–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç —á–µ—Ä–µ–∑ ${hoursUntilNextRun} —á–∞—Å–æ–≤`);
  
  // –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –∑–¥–µ—Å—å –±—ã–ª –±—ã:
  // setTimeout(runDailyMusicImport, msUntilNextRun);
  // –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ node-cron:
  // cron.schedule('0 3 * * *', runDailyMusicImport);
  
  return {
    nextRun: tomorrow,
    hoursUntilNextRun
  };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É
export async function manualImportTrigger(playlistUrl?: string) {
  if (playlistUrl) {
    console.log(`üéØ –†—É—á–Ω–æ–π –∏–º–ø–æ—Ä—Ç –ø–ª–µ–π–ª–∏—Å—Ç–∞: ${playlistUrl}`);
    return await importFromYandexPlaylist(playlistUrl);
  } else {
    console.log('üéØ –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞');
    return await runDailyMusicImport();
  }
}