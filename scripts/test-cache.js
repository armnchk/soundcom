import 'dotenv/config';
import { db } from '../server/db.js';
import { storage } from '../server/storage.js';
import { ServiceContainer } from '../server/services/index.js';
import { CacheService } from '../server/cache/CacheService.js';

async function testCacheInvalidation() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω–≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∫—ç—à–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π...');
  
  try {
    const services = new ServiceContainer(storage);
    const cache = CacheService.getInstance();
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ (–¥–æ–ª–∂–Ω–æ –∑–∞–∫—ç—à–∏—Ä–æ–≤–∞—Ç—å—Å—è)
    console.log('1. –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏...');
    const activeCollections = await services.collections.getCollections(true);
    console.log(`   –ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π: ${activeCollections.length}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ (–¥–æ–ª–∂–Ω–æ –∑–∞–∫—ç—à–∏—Ä–æ–≤–∞—Ç—å—Å—è)
    console.log('2. –ü–æ–ª—É—á–∞–µ–º –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏...');
    const inactiveCollections = await services.collections.getCollections(false);
    console.log(`   –ù–∞–π–¥–µ–Ω–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π: ${inactiveCollections.length}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
    console.log('3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à...');
    const cachedActive = await cache.get('collections:true');
    const cachedInactive = await cache.get('collections:false');
    console.log(`   –ö—ç—à –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π: ${cachedActive ? '–µ—Å—Ç—å' : '–Ω–µ—Ç'}`);
    console.log(`   –ö—ç—à –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π: ${cachedInactive ? '–µ—Å—Ç—å' : '–Ω–µ—Ç'}`);
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏–∏, –ø–æ–ø—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å –æ–¥–Ω—É
    if (activeCollections.length > 0) {
      const collectionId = activeCollections[0].id;
      console.log(`4. –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é ${collectionId}...`);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é (–¥–æ–ª–∂–Ω–æ –∏–Ω–≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å –∫—ç—à)
      await services.collections.updateCollection(collectionId, {
        title: activeCollections[0].title + ' (–æ–±–Ω–æ–≤–ª–µ–Ω–æ)'
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫—ç—à –∏–Ω–≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω
      console.log('5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–≤–∞–ª–∏–¥–∞—Ü–∏—é –∫—ç—à–∞...');
      const cachedActiveAfter = await cache.get('collections:true');
      const cachedInactiveAfter = await cache.get('collections:false');
      console.log(`   –ö—ç—à –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${cachedActiveAfter ? '–µ—Å—Ç—å' : '–Ω–µ—Ç'}`);
      console.log(`   –ö—ç—à –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${cachedInactiveAfter ? '–µ—Å—Ç—å' : '–Ω–µ—Ç'}`);
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
      await services.collections.updateCollection(collectionId, {
        title: activeCollections[0].title
      });
    }
    
    console.log('‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫—ç—à–∞:', error);
  } finally {
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    await db.end();
  }
}

testCacheInvalidation();
