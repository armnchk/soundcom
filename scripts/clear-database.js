#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –æ—Ç —Ä–µ–ª–∏–∑–æ–≤ –∏ –∞—Ä—Ç–∏—Å—Ç–æ–≤
 * –û—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
 */

import 'dotenv/config';
import { db } from '../server/db.ts';
import { 
  releases, 
  artists, 
  ratings, 
  comments, 
  commentReactions, 
  reports, 
  collections, 
  collectionReleases,
  importJobs,
  autoImportPlaylists,
  importLogs,
  discographyCache
} from '../shared/schema.ts';
import { eq, sql } from 'drizzle-orm';

async function clearDatabase() {
  console.log('üßπ –û—á–∏—â–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...\n');
  
  try {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log('üìä –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï:');
    console.log('='.repeat(50));
    
    const stats = await db.execute(sql`
      SELECT 
        (SELECT COUNT(*) FROM releases) as releases_count,
        (SELECT COUNT(*) FROM artists) as artists_count,
        (SELECT COUNT(*) FROM ratings) as ratings_count,
        (SELECT COUNT(*) FROM comments) as comments_count,
        (SELECT COUNT(*) FROM reports) as reports_count,
        (SELECT COUNT(*) FROM collections) as collections_count,
        (SELECT COUNT(*) FROM import_jobs) as import_jobs_count,
        (SELECT COUNT(*) FROM discography_cache) as cache_count
    `);
    
    const currentStats = stats.rows[0];
    console.log(`–†–µ–ª–∏–∑–æ–≤: ${currentStats.releases_count}`);
    console.log(`–ê—Ä—Ç–∏—Å—Ç–æ–≤: ${currentStats.artists_count}`);
    console.log(`–†–µ–π—Ç–∏–Ω–≥–æ–≤: ${currentStats.ratings_count}`);
    console.log(`–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: ${currentStats.comments_count}`);
    console.log(`–ñ–∞–ª–æ–±: ${currentStats.reports_count}`);
    console.log(`–ö–æ–ª–ª–µ–∫—Ü–∏–π: ${currentStats.collections_count}`);
    console.log(`–ó–∞–¥–∞—á –∏–º–ø–æ—Ä—Ç–∞: ${currentStats.import_jobs_count}`);
    console.log(`–ö—ç—à –¥–∏—Å–∫–æ–≥—Ä–∞—Ñ–∏–π: ${currentStats.cache_count}`);
    
    console.log('\nüóëÔ∏è –£–î–ê–õ–Ø–ï–ú –î–ê–ù–ù–´–ï:');
    console.log('='.repeat(50));
    
    // –£–¥–∞–ª—è–µ–º –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (—Å–Ω–∞—á–∞–ª–∞ –∑–∞–≤–∏—Å–∏–º—ã–µ —Ç–∞–±–ª–∏—Ü—ã)
    console.log('1. –£–¥–∞–ª—è–µ–º —Ä–µ–π—Ç–∏–Ω–≥–∏...');
    await db.delete(ratings);
    console.log('   ‚úÖ –†–µ–π—Ç–∏–Ω–≥–∏ —É–¥–∞–ª–µ–Ω—ã');
    
    console.log('2. –£–¥–∞–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏...');
    await db.delete(commentReactions);
    console.log('   ‚úÖ –†–µ–∞–∫—Ü–∏–∏ —É–¥–∞–ª–µ–Ω—ã');
    
    console.log('3. –£–¥–∞–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏...');
    await db.delete(comments);
    console.log('   ‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —É–¥–∞–ª–µ–Ω—ã');
    
    console.log('4. –£–¥–∞–ª—è–µ–º –∂–∞–ª–æ–±—ã...');
    await db.delete(reports);
    console.log('   ‚úÖ –ñ–∞–ª–æ–±—ã —É–¥–∞–ª–µ–Ω—ã');
    
    console.log('5. –£–¥–∞–ª—è–µ–º —Å–≤—è–∑–∏ –∫–æ–ª–ª–µ–∫—Ü–∏–π —Å —Ä–µ–ª–∏–∑–∞–º–∏...');
    await db.delete(collectionReleases);
    console.log('   ‚úÖ –°–≤—è–∑–∏ –∫–æ–ª–ª–µ–∫—Ü–∏–π —É–¥–∞–ª–µ–Ω—ã');
    
    console.log('6. –£–¥–∞–ª—è–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏–∏...');
    await db.delete(collections);
    console.log('   ‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏–∏ —É–¥–∞–ª–µ–Ω—ã');
    
    console.log('7. –£–¥–∞–ª—è–µ–º —Ä–µ–ª–∏–∑—ã...');
    await db.delete(releases);
    console.log('   ‚úÖ –†–µ–ª–∏–∑—ã —É–¥–∞–ª–µ–Ω—ã');
    
    console.log('8. –£–¥–∞–ª—è–µ–º –∫—ç—à –¥–∏—Å–∫–æ–≥—Ä–∞—Ñ–∏–π...');
    await db.delete(discographyCache);
    console.log('   ‚úÖ –ö—ç—à –¥–∏—Å–∫–æ–≥—Ä–∞—Ñ–∏–π —É–¥–∞–ª–µ–Ω');
    
    console.log('9. –£–¥–∞–ª—è–µ–º –∞—Ä—Ç–∏—Å—Ç–æ–≤...');
    await db.delete(artists);
    console.log('   ‚úÖ –ê—Ä—Ç–∏—Å—Ç—ã —É–¥–∞–ª–µ–Ω—ã');
    
    console.log('10. –£–¥–∞–ª—è–µ–º –∑–∞–¥–∞—á–∏ –∏–º–ø–æ—Ä—Ç–∞...');
    await db.delete(importJobs);
    console.log('   ‚úÖ –ó–∞–¥–∞—á–∏ –∏–º–ø–æ—Ä—Ç–∞ —É–¥–∞–ª–µ–Ω—ã');
    
    console.log('11. –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ–∏–º–ø–æ—Ä—Ç –ø–ª–µ–π–ª–∏—Å—Ç—ã...');
    await db.delete(autoImportPlaylists);
    console.log('   ‚úÖ –ê–≤—Ç–æ–∏–º–ø–æ—Ä—Ç –ø–ª–µ–π–ª–∏—Å—Ç—ã —É–¥–∞–ª–µ–Ω—ã');
    
    console.log('12. –£–¥–∞–ª—è–µ–º –ª–æ–≥–∏ –∏–º–ø–æ—Ä—Ç–∞...');
    await db.delete(importLogs);
    console.log('   ‚úÖ –õ–æ–≥–∏ –∏–º–ø–æ—Ä—Ç–∞ —É–¥–∞–ª–µ–Ω—ã');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log('\nüìä –§–ò–ù–ê–õ–¨–ù–û–ï –°–û–°–¢–û–Ø–ù–ò–ï:');
    console.log('='.repeat(50));
    
    const finalStats = await db.execute(sql`
      SELECT 
        (SELECT COUNT(*) FROM releases) as releases_count,
        (SELECT COUNT(*) FROM artists) as artists_count,
        (SELECT COUNT(*) FROM ratings) as ratings_count,
        (SELECT COUNT(*) FROM comments) as comments_count,
        (SELECT COUNT(*) FROM reports) as reports_count,
        (SELECT COUNT(*) FROM collections) as collections_count,
        (SELECT COUNT(*) FROM import_jobs) as import_jobs_count,
        (SELECT COUNT(*) FROM discography_cache) as cache_count
    `);
    
    const final = finalStats.rows[0];
    console.log(`–†–µ–ª–∏–∑–æ–≤: ${final.releases_count}`);
    console.log(`–ê—Ä—Ç–∏—Å—Ç–æ–≤: ${final.artists_count}`);
    console.log(`–†–µ–π—Ç–∏–Ω–≥–æ–≤: ${final.ratings_count}`);
    console.log(`–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: ${final.comments_count}`);
    console.log(`–ñ–∞–ª–æ–±: ${final.reports_count}`);
    console.log(`–ö–æ–ª–ª–µ–∫—Ü–∏–π: ${final.collections_count}`);
    console.log(`–ó–∞–¥–∞—á –∏–º–ø–æ—Ä—Ç–∞: ${final.import_jobs_count}`);
    console.log(`–ö—ç—à –¥–∏—Å–∫–æ–≥—Ä–∞—Ñ–∏–π: ${final.cache_count}`);
    
    console.log('\n‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞!');
    console.log('üéµ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –∏–º–ø–æ—Ä—Ç —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    process.exit(0);
  }
}

clearDatabase();